# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ "develop" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "develop" ]

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.x"]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with: { python-version: "3.10" }
    - name: Install Slam
      run: pip install -U pip pipx -q && pipx install $(cat .github/files/slam-cli.txt)

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with: { python-version: "${{ matrix.python-version }}" }
    - name: Install
      run: slam install --no-venv-check -v
    - name: Slam test
      run: slam test

  update-pr-numbers:
    if: github.event_name == 'pull_request'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with: { python-version: "3.10" }
    - name: Install Slam
      run: pip install -r .github/files/slam-cli.txt
    - name: Update PR references in changelogs
      run: slam -vv changelog update-pr --use github-actions

  build-documentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with: { python-version: "3.10" }
    - name: Install documentation tools
      run: pip install -r docs/requirements.txt
    - name: Build documentation
      run: cd docs && novella
    - name: Publish docs
      uses: JamesIves/github-pages-deploy-action@4.1.4
      if: github.ref == 'refs/heads/develop'
      with:
        branch: gh-pages
        folder: docs/_site
        ssh-key: ${{ secrets.DEPLOY_KEY }}
